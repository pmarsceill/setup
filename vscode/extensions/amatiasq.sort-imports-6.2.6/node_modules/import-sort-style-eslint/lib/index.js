"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const eslint_1 = require("eslint");
const _ = require("lodash");
function default_1(styleApi, file) {
    const { member, alias, hasNoMember, hasOnlyNamespaceMember, hasMultipleMembers, hasSingleMember, unicode, } = styleApi;
    let useLowerCase = false;
    let memberSortSyntaxOrder = ["none", "all", "multiple", "single"];
    if (file) {
        try {
            const eslintCLI = new eslint_1.CLIEngine({});
            const eslintConfig = eslintCLI.getConfigForFile(path_1.resolve(file));
            useLowerCase = _.get(eslintConfig, "rules.sort-imports[1].ignoreCase", false);
            const newMemberSortSyntaxOrder = _.get(eslintConfig, "rules.sort-imports[1].memberSyntaxSortOrder", []);
            if (_.difference(memberSortSyntaxOrder, newMemberSortSyntaxOrder).length ===
                0) {
                memberSortSyntaxOrder = newMemberSortSyntaxOrder;
            }
        }
        catch (e) {
            // Just use defaults in this case
        }
    }
    const eslintSort = (first, second) => {
        if (useLowerCase) {
            return unicode(first.toLowerCase(), second.toLowerCase());
        }
        return unicode(first, second);
    };
    const styleItemByType = {
        none: { match: hasNoMember },
        all: { match: hasOnlyNamespaceMember, sort: member(eslintSort) },
        multiple: {
            match: hasMultipleMembers,
            sort: member(eslintSort),
            sortNamedMembers: alias(eslintSort),
        },
        single: { match: hasSingleMember, sort: member(eslintSort) },
    };
    return [
        // none (don't sort them, because side-effects may need a particular ordering)
        styleItemByType[memberSortSyntaxOrder[0]],
        { separator: true },
        // all
        styleItemByType[memberSortSyntaxOrder[1]],
        { separator: true },
        // multiple
        styleItemByType[memberSortSyntaxOrder[2]],
        { separator: true },
        // single
        styleItemByType[memberSortSyntaxOrder[3]],
    ];
}
exports.default = default_1;
