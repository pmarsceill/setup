{
	"messages": [
		"Repair",
		"An update or installation of VS Live Share failed due to a corrupted download.",
		"Live Share was unable to download needed dependencies to finish installation.",
		"Having trouble with your Live Share installation?",
		"$(messagePrefix) Ensure you have network connectivity then click `Repair` to restart VS Code and attempt recovery.",
		"Retry",
		"Unable to finish repair as files are in use. Please end all Visual Studio Live Share Agent (${processName}) processes and click `Retry`",
		"The host has ended the current collaboration session. Open folders and editors will now close.",
		"The collaboration session expired. Please sign in and try again.",
		"You have been removed from the collaboration session.",
		"You have been blocked from the collaboration session.",
		"You were disconnected from the collaboration session due to a connectivity problem or the host going offline.",
		"The collaboration session has ended due to an internal error.",
		"The collaboration session expired. Please sign in and try again.",
		"The collaboration session has ended due to network going offline. Check your network status.",
		"The Azure Cloud Relay went offline for this session, new guests may not be able to successfully join via relay. Consider re-sharing.",
		"The Azure Cloud Relay went offline for this session, new guests may not be able to successfully join via relay. Consider re-sharing.",
		"The collaboration session has ended due to an internal error."
	],
	"keys": [
		"button.repair",
		"notification.installRecoveryDependenciesPrefix",
		"notification.installRecoveryDependenciesPrefix",
		"notification.installRecoveryDefaultPrefix",
		"notification.installRecovery",
		"button.retry",
		"notification.retryRepair",
		"notification.SessionEnded",
		"notification.SessionExpired",
		"notification.UserRemoved",
		"notification.UserBlocked",
		"notification.ConnectionLost",
		"notification.InternalError",
		"notification.SessionExpired",
		"notification.NetworkDisconnected",
		"notification.ListenerWentOffline",
		"info.ListenerWentOffline",
		"notification.InternalError"
	],
	"filePath": "src\\commands"
}