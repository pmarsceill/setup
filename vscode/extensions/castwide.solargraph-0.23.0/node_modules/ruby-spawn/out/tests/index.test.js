"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("mocha");
const chai_1 = require("chai");
const index_1 = require("../index");
const path = require("path");
const os_1 = require("os");
suite('rubySpawn', () => {
    it('spawns a Ruby process', (done) => {
        let script = path.resolve('.', 'fixtures', 'cwd.rb');
        let child = index_1.rubySpawn('ruby', [script]);
        child.on('close', (code) => {
            chai_1.expect(code).to.equal(0);
            done();
        });
    });
    it('sets the current directory', (done) => {
        let script = path.resolve('.', 'fixtures', 'cwd.rb');
        let dir = path.resolve('.', 'fixtures');
        let child = index_1.rubySpawn('ruby', [script], { cwd: dir });
        let out = '';
        child.stdout.on('data', (buffer) => {
            out = out + buffer.toString();
        });
        child.stdout.on('close', () => {
            chai_1.expect(path.normalize(out)).to.equal(dir);
            done();
        });
    });
    it('sets a foreign directory', (done) => {
        let script = path.resolve('.', 'fixtures', 'cwd.rb');
        let dir = path.resolve('.');
        let child = index_1.rubySpawn('ruby', [script], { cwd: dir });
        let out = '';
        child.stdout.on('data', (buffer) => {
            out = out + buffer.toString();
        });
        child.stdout.on('close', () => {
            chai_1.expect(path.normalize(out)).to.equal(dir);
            done();
        });
    });
    if (os_1.platform().match(/darwin|linux/)) {
        it('works with .ruby-version', (done) => {
            let script = path.resolve('.', 'fixtures', 'version.rb');
            let dir = path.resolve('.', 'fixtures', 'change');
            let child = index_1.rubySpawn('ruby', [script], { cwd: dir });
            let out = '';
            child.stdout.on('data', (buffer) => {
                out = out + buffer.toString();
            });
            child.stdout.on('close', () => {
                chai_1.expect(out).to.match(/2\.4\.6$/);
                done();
            });
        });
    }
});
//# sourceMappingURL=index.test.js.map